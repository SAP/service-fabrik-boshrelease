#!/bin/bash
#sourcing job properties to bring openstack credential in env variables
# shellcheck disable=SC1091
source /var/vcap/jobs/keepalived/bin/job_properties.sh
generate_body_for_port_update(){
if [ -n "$1" ]; then
cat << EOF
{
    "port": {
        "allowed_address_pairs": [
          {
	  	"ip_address": "${1}"
	  }
        ]
    }
}
EOF
else
cat << EOF
{
    "port": {
        "allowed_address_pairs": []
    }
}
EOF
fi
}

get_port_id(){
    local fixed_ip
    fixed_ip="${1}"
    local neutron_port_id
    neutron_port_id="$(curl --retry 2 -sk -X GET \
        -H "X-Auth-Token: ${OS_TOKEN}" \
        -H "Accepts: application/json" \
        "${NETWORK_PUBLIC_URL}v2.0/ports" | ${JQ_CMD} \
        -r ".ports[] | select(.fixed_ips[].ip_address==\"${fixed_ip}\") | .id")"
    RET=$?
    if [[ $RET -ne 0 ]] ; then
        echo "$(date) [ERROR] - HTTP Error: ${RET}"
        exit ${RET}
    fi
    echo "${neutron_port_id}"
}

update_port(){
    local neutron_port_id
    neutron_port_id=${1:-}
    local virtual_ip
    virtual_ip=${2:-}
    local response_port_update
    response_port_update=$(curl --retry 2 -sk -X PUT -w "\\n%{http_code}" \
        -H "X-Auth-Token: ${OS_TOKEN}" \
        -H "Content-Type: application/json" \
        -H "Accepts: application/json" \
        "${NETWORK_PUBLIC_URL}v2.0/ports/${neutron_port_id}" \
        -d "$(generate_body_for_port_update "${virtual_ip}")")
    RET=$?
    if [[ $RET -ne 0 ]] ; then
        echo "$(date) [ERROR] - HTTP Error: ${response_port_update}"
        exit ${RET}
    fi
}
