---
defaults:
  http_success_codes:<% p('event.defaults.http_success_codes').each do |code| %>
  - <%= code %><% end %>
  http_inprogress_codes:<% p('event.defaults.http_inprogress_codes').each do |code| %>
  - <%= code %><% end %>
  # flag used to determine if async operations in-progress state is to be logged
  log_inprogress_state: <%= p('event.defaults.log_inprogress_state') %>
  # flag to indicate if a particular HTTP operation is to be treated as cf-lastoperation semantics additionally
  cf_last_operation: <%= p('event.defaults.cf_last_operation') %>
  # flag to indicate if service-fabrik operations are to be excluded. for ex. broker update (HTTP Patch)
  #  gets invoked via backup/restore etc, which are to be ignored when coming via HTTP Patch.
  ignore_service_fabrik_operation: <%= p('event.defaults.ignore_service_fabrik_operation') %>
  # wheter HTTP response body is to be logged or not
  include_response_body: <%= p('event.defaults.include_response_body') %>
"/admin/deployments":
  GET:
    enabled: true
    event_name: get_all_deployments
    description: Retrieve all deployments
    tags:
    - admin
    - deployment
"/admin/deployments/:name":
  GET:
    enabled: true
    event_name: get_deployment_by_name
    description: Retrieve deployment by name
    tags:
    - admin
    - deployment
"/admin/deployments/:name/update":
  POST:
    enabled: true
    event_name: initiate_update_deployment
    description: 'Update deployment initiation '
    tags:
    - admin
    - deployment
"/admin/deployments/outdated":
  GET:
    enabled: true
    event_name: get_outdated_deployments
    description: Retrieve all outdated deployments
    tags:
    - admin deployment
"/admin/deployments/outdated/update":
  POST:
    enabled: true
    event_name: update_all_outdated_deployments
    description: Update all outdated deployment
    tags:
    - admin deployment
"/admin/backups":
  GET:
    enabled: true
    event_name: list_all_backup
    description: Retrieve all backups prior to input date
    tags:
    - admin
    - backup
"/admin/backups/:backup_guid/delete":
  POST:
    enabled: true
    event_name: delete_backup
    description: Delete a particular backup
    log_inprogress_state: true
    tags:
    - delete
    - admin
    - backup
    http_success_codes:<% p('event.delete.http_success_codes').each do |code| %>
    - <%= code %><% end %>
"/admin/service-fabrik/backup":
  GET:
    enabled: true
    event_name: list_service_fabrik_mongodb_backup
    description: Retrieve all service fabrik mongodb backups
    tags:
    - servicefabrikbackup
  POST:
    enabled: true
    event_name: create_service_fabrik_mongodb_backup
    description: create service fabrik mongodb backup
    tags:
    - servicefabrikbackup
"/admin/service-fabrik/backup/status":
  GET:
    enabled: true
    event_name: get_service_fabrik_backup_status
    description: Retrieve status of the service fabrik mongodb backup operation
    tags:
    - servicefabrikbackup
"/admin/service-fabrik/restore":
  GET:
    enabled: true
    event_name: list_service_fabrik_mongodb_restore
    description: Retrieve last restore operation info on service fabrik mongodb
    tags:
    - servicefabrikrestore
  POST:
    enabled: true
    event_name: restore_service_fabrik_mongodb_backup
    description: Restore service fabrik mongodb backup to the input backup guid
    tags:
    - servicefabrikrestore
"/admin/service-fabrik/restore/status":
  GET:
    enabled: true
    event_name: get_service_fabrik_restore_status
    description: Retrieve status of the service fabrik mongodb restore operation
    tags:
    - servicefabrikrestore
"/admin/service-fabrik/db":
  GET:
    enabled: true
    event_name: get_service_fabrik_mongodb_status
    description: Retrieve service fabrik mongodb status
    tags:
    - servicefabrikdbstatus
  POST:
    enabled: true
    event_name: create_service_fabrik_mongodb
    description: provision service fabrik mongodb
    tags:
    - servicefabrikdbcreate
  PUT:
    enabled: true
    event_name: update_service_fabrik_mongodb
    description: update service fabrik mongodb deployment
    tags:
    - servicefabrikdbupdate
# API used as a place holder to generate event logs for maas
"/usage/v2/usage/documents":
  PUT:
    enabled: true
    event_name: send_metering_usage
    description: Send usage data to Metering as a Service
    tags:
    - metering
    http_success_codes:<% p('event.defaults.http_success_codes').each do |code| %>
    - <%= code %><% end %>
