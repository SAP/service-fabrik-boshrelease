<%
  log_level = "info"
  log_path = "/var/vcap/sys/log/service-fabrik-postgresqlmt-operator/service-fabrik-postgresqlmt-operator.log"
  external = link("broker").p('external')
  internal = link("broker").p('internal')
  broker_name = link("broker").p('name')
%>---
production:
  ####################
  # GENERAL SETTINGS #
  ####################
  username: '<%= link("broker").p('username') %>'
  password: '<%= link("broker").p('password') %>'
  broker_ip: <%= spec.ip %>
  broker_name: '<%= broker_name %>'
  enable_service_fabrik_v2: <%= link("broker").p('enable_service_fabrik_v2') %>
  skip_ssl_validation: <%= link("broker").p('skip_ssl_validation') %>
  log_path: <%= log_path %>
  log_level: <%= log_level %>
  enable_circuit_breaker: <%= link("broker").p('enable_circuit_breaker') %>
  http_timeout: <%= link("broker").p('http_timeout') %>
  agent_operation_timeout: <%= link("broker").p('agent_operation_timeout') %>
  broker_drain_message: <%= link("broker").p('broker_drain_message') %>
  
  ##############################
  # EXTERNAL ENDPOINT SETTINGS #
  ##############################
  external:
    protocol: 'https'
    host: <%= external['host'] %>
    cookie_secure: true
    session_expiry: <%= external['session_expiry'] %>

  ##############################
  # INTERNAL ENDPOINT SETTINGS #
  ##############################
  internal:
    log_event: <%= link("broker").p('internal.log_event') %>
    event_type: SF.BROKER_EVENT
    domain_socket:
      path: <%= link("broker").p('internal.domain_socket.path') %>
      fwd_events: true
    port: <%= internal['port'] %>
    ip: <%= internal['ip'] %>
    host: <%= "#{internal['ip']}:#{internal['port']}" %>
    protocol: 'https'
    <% link("broker").if_p('internal.ssl') do |ssl| %>
    ssl: <%= JSON.dump(ssl) %>
    <% end %>
  
  ##############################
  # APISERVER SETTINGS #
  ##############################
  apiserver:
    ip: <%= link("service-fabrik-apiserver").p('ip') %>
    port: <%= link("service-fabrik-apiserver").p('port') %>
    ca: <%= JSON.dump(link("service-fabrik-apiserver").p('tls.apiserver.ca')) %>
    certificate: <%= JSON.dump(link("service-fabrik-apiserver").p('tls.apiserver.certificate')) %>
    private_key: <%= JSON.dump(link("service-fabrik-apiserver").p('tls.apiserver.private_key')) %>
    crds: <%= JSON.dump(link("service-fabrik-apiserver").p('crds')) %>
    getConfigInCluster: false
    pathToKubeConfig: "/var/vcap/jobs/service-fabrik-postgresqlmt-operator/config/kubeconfig.yaml"
      
  #########################
  # CLOUDFOUNDRY SETTINGS #
  #########################
  cf:
    url: <%= link("broker").p('cf.url') %>
    username: <%= link("broker").p('cf.username') %>
    password: <%= link("broker").p('cf.password') %>
    <% link("broker").if_p('cf.identity_provider') do |identity_provider| %>
    identity_provider: <%= identity_provider %>
    <% end %>

  ###################
  # BACKUP SETTINGS #
  ###################
  backup:
    retention_period_in_days: <%= link("broker").p('backup.retention_period_in_days') %>
    max_num_on_demand_backup: <%= link("broker").p('backup.max_num_on_demand_backup') %>
    status_check_every: <%= link("broker").p('backup.status_check_every') %>
    retry_delay_on_error: <%= link("broker").p('backup.retry_delay_on_error') %>
    lock_check_delay_on_restart: <%= link("broker").p('backup.lock_check_delay_on_restart') %>
    backup_restore_status_poller_timeout: <%= link("broker").p('backup.backup_restore_status_poller_timeout') %>
    backup_restore_status_check_every: <%= link("broker").p('backup.backup_restore_status_check_every') %>
    abort_time_out: <%= link("broker").p('backup.abort_time_out') %>
    consecutive_backup_failure_sla_count: <%= link("broker").p('backup.consecutive_backup_failure_sla_count') %>
    num_of_allowed_restores: <%= link("broker").p('backup.num_of_allowed_restores') %>
    restore_history_days: <%= link("broker").p('backup.restore_history_days') %>
    reschedule_backup_delay_after_restore: <%= link("broker").p('backup.reschedule_backup_delay_after_restore') %>
    provider: <%= JSON.dump(link("broker").p('backup.provider', nil)) %>
    
  #####################
  # DIRECTOR SETTINGS #
  #####################
  directors: <%= JSON.dump(link("broker").p('directors')) %>

  ####################
  # SERVICES CATALOG #
  ####################
  services: <%= JSON.pretty_generate(link("broker").p('services')) %>
