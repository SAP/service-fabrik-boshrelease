---
name: service-fabrik-scheduler

packages:
  - bosh-helpers
  - node
  - service-fabrik-broker

templates:
  bin/service-fabrik-scheduler_ctl.erb: bin/service-fabrik-scheduler_ctl
  bin/job_properties.sh.erb: bin/job_properties.sh
  config/settings.yml.erb: config/settings.yml
  config/eventlog-config-external.yml.erb: config/eventlog-config-external.yml
  config/eventlog-config-internal.yml.erb: config/eventlog-config-internal.yml
  config/syslog_forwarding.conf.erb: config/syslog_forwarding.conf
  config/circuit-breaker-config.yml.erb: config/circuit-breaker-config.yml

provides:
- name: scheduler
  type: scheduler
  properties: 
  - job_types
  - process_every
  - run_with_web_process
  - max_workers
  - max_concurrency
  - default_concurrency
  - start_delay
  - default_lock_lifetime
  - maintenance_check_interval
  - maintenance_mode_time_out
  - downtime_maintenance_phases
  - agenda_collection
  - jobs.reschedule_delay
  - jobs.scheduled_backup.max_attempts
  - jobs.service_instance_update.max_attempts
  - jobs.service_instance_update.run_every_xdays
  - jobs.service_instance_update.should_start_after_hr
  - jobs.service_instance_update.should_start_before_hr
  - jobs.service_instance_update.should_start_after_min 
  - jobs.service_instance_update.should_start_before_min
  - jobs.service_instance_update.time_zone
  - system_jobs.backup_reaper.job_data.delete_delay
  - system_jobs.backup_reaper.interval
  - system_jobs.dbcollection_reaper.interval
  - system_jobs.dbcollection_reaper.jobrun_detail.retention_in_days
  - system_jobs.dbcollection_reaper.event_detail.retention_in_days
  - system_jobs.meter_instance.interval
  - system_jobs.meter_instance.enabled
  - system_jobs.archive_metered_events.interval
  - system_jobs.archive_metered_events.job_data.events_to_patch

consumes:
- name: broker
  type: broker
- name: deployment_hooks
  type: deployment_hooks
- name: service-fabrik-apiserver
  type: service-fabrik-apiserver

properties:
  scheduler.name:
    description: "Name of the service fabrik job scheduler"
    default: "service-fabrik-scheduler"

  job_types:
    description: "Comma seperated list of batch job types that are enabled in service fabrik. Jobs can be enabled disabled by changing this list."
  process_every:
    description: "Interval at which scheduler will query the database looking for jobs that need to be processed"
    default: "1 minute"
  run_with_web_process:
    description: "Flag which indicates if scheduler can run in the same process as that of service fabrik broker web process"
    default: false
  max_workers:
    description: "Max number of Job process workers"
    default: 2
  max_concurrency:
    description: "A number which specifies the max number of batch jobs that can be running at any given moment"
    default: 30
  default_concurrency:
    description: "A number which specifies the default number of a specific job that can be running at any given moment"
    default: 20
  start_delay:
    description: "Scheduler start must be delayed for DB connections to happen"
    default: 120000
  default_lock_lifetime:
    description: "Specifies the default lock lifetime of a batchjob in milliseconds. A job cannot be re-run when within this locktime period (in case of errors, crash etc.)"
    default: 180000
  maintenance_check_interval:
    description: "Once scheduler is placed in maintenace mode, it checks every configured (ms) for status of maitenance mode"
    default: 90000
  maintenance_mode_time_out:
    description: "(ms) - wait for sf deployment to complete. Beyond this timeout out time scheduler starts"
    default: 36000000
  downtime_maintenance_phases:
    description: "Maintenance phases during which (even any one of them) the scheduler must be shut down as ZDM is not in place across dependent components"
    default: ['BROKER_DRAIN_INITIATED']
  agenda_collection:
    description: "Name of the collection in mongodb which is to be used by agendaJS to store the scheduled job meta info"
    default: "agendaJobs"
  job_history_retention_in_days:
    description: "Retention period in number of days, for which the job run history is maintained. (for ex. 30 - job run history for 30 days will be maintained)"
    default: 30
  jobs.reschedule_delay:
    description: "Jobs when found to be conflicting with each other are rescheduled after this delay (human-interval)"
    default: "20 minutes from now"
  jobs.scheduled_backup.max_attempts:
    description: "If an update is in-progess while backup is to be run, then the backup will be rescheduled after a delay. This will be repeated for the below configured times if update is long running"
    default: 3
  jobs.service_instance_update.max_attempts:
    description: "In case of an error while trigerring an update, max retry attempts will be done based on the below configured value (note errors due to running backups are not considered)"
    default: 3
  jobs.service_instance_update.run_every_xdays:
    description: "Runs the service instance update job once every configured number of days"
    default: 7
  jobs.service_instance_update.should_start_after_hr:
    description: "Service instance update job schedule is randomized but this param specifies the start time (hrs) after which the randomization must be done"
    default: 7
  jobs.service_instance_update.should_start_before_hr:
    description: "Service instance update job schedule is randomized but this param specifies the start time (hrs) before which the randomization must be done"
    default: 16
  jobs.service_instance_update.should_start_after_min:
    description: "Service instance update job schedule is randomized but this param specifies the start time (mins) after which the randomization must be done"
    default: 0
  jobs.service_instance_update.should_start_before_min:
    description: "Service instance update job schedule is randomized but this param specifies the start time (mins) before which the randomization must be done"
    default: 59
  jobs.service_instance_update.time_zone:
    description: "Timezone in which the service instance update job runs"
    default: "Asia/Kolkata"
  system_jobs.backup_reaper.job_data.delete_delay:
    description: "delay in processing between two tasks (in millisecond)"
    default: 1000
  system_jobs.backup_reaper.interval:
    description: "Cron expression defining schedule interval for backup reaper job"
    default: 0 1 * * *
  system_jobs.dbcollection_reaper.interval:
    description: "Cron expression defining schedule interval for db collection reaper job"
    default: 0 2 * * *
  system_jobs.dbcollection_reaper.jobrun_detail.retention_in_days:
    description: "Retention period in days for the agenda job run details. Data older than this is deleted"
    default: 60
  system_jobs.dbcollection_reaper.event_detail.retention_in_days:
    description: "Retention period in days for the event details (create_backup/update_instance) stored in SF. Data older than this is deleted"
    default: 90
  system_jobs.meter_instance.interval:
    description: "Cron expression defining schedule interval for metering job"
    default: 0 2 * * *
  system_jobs.meter_instance.enabled:
    description: "true if metering is enabled"
    default: false
  system_jobs.archive_metered_events.interval:
    description: "Cron expression defining schedule interval for archive_metered_events job"
    default: 0 */6 * * *
  system_jobs.archive_metered_events.job_data.events_to_patch:
    description: "Number of events to patch in one job run"
    default: 100
