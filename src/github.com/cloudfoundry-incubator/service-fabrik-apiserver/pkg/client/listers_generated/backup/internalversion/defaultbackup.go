//TODO copyright header

// This file was automatically generated by lister-gen

package internalversion

import (
	backup "github.com/cloudfoundry-incubator/service-fabrik-apiserver/pkg/apis/backup"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DefaultBackupLister helps list DefaultBackups.
type DefaultBackupLister interface {
	// List lists all DefaultBackups in the indexer.
	List(selector labels.Selector) (ret []*backup.DefaultBackup, err error)
	// DefaultBackups returns an object that can list and get DefaultBackups.
	DefaultBackups(namespace string) DefaultBackupNamespaceLister
	DefaultBackupListerExpansion
}

// defaultBackupLister implements the DefaultBackupLister interface.
type defaultBackupLister struct {
	indexer cache.Indexer
}

// NewDefaultBackupLister returns a new DefaultBackupLister.
func NewDefaultBackupLister(indexer cache.Indexer) DefaultBackupLister {
	return &defaultBackupLister{indexer: indexer}
}

// List lists all DefaultBackups in the indexer.
func (s *defaultBackupLister) List(selector labels.Selector) (ret []*backup.DefaultBackup, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*backup.DefaultBackup))
	})
	return ret, err
}

// DefaultBackups returns an object that can list and get DefaultBackups.
func (s *defaultBackupLister) DefaultBackups(namespace string) DefaultBackupNamespaceLister {
	return defaultBackupNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DefaultBackupNamespaceLister helps list and get DefaultBackups.
type DefaultBackupNamespaceLister interface {
	// List lists all DefaultBackups in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*backup.DefaultBackup, err error)
	// Get retrieves the DefaultBackup from the indexer for a given namespace and name.
	Get(name string) (*backup.DefaultBackup, error)
	DefaultBackupNamespaceListerExpansion
}

// defaultBackupNamespaceLister implements the DefaultBackupNamespaceLister
// interface.
type defaultBackupNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DefaultBackups in the indexer for a given namespace.
func (s defaultBackupNamespaceLister) List(selector labels.Selector) (ret []*backup.DefaultBackup, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*backup.DefaultBackup))
	})
	return ret, err
}

// Get retrieves the DefaultBackup from the indexer for a given namespace and name.
func (s defaultBackupNamespaceLister) Get(name string) (*backup.DefaultBackup, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(backup.Resource("defaultbackup"), name)
	}
	return obj.(*backup.DefaultBackup), nil
}
